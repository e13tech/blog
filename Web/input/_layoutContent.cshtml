@{ Layout = "_layout"; }


<article>
    @{
        var headingStyle = "";
        if (!string.IsNullOrWhiteSpace(Document.GetString("Image")))
        {
            headingStyle = $"style=\"background-image: url('/{Document.GetString("Image")}')\"";
        }
    }

    <div class="heading" @Html.Raw(headingStyle)>
        @if (!Document.GetBool("HideTitle", false))
        {
            <h2>@Document.GetString("Title")</h2>
        }
        <div>
            @if (!Document.GetBool("HidePublishInfo", false))
            {
                @if (Document.GetString("Author") != null)
                {
                    var author = Document.GetString("Author");
                    var authorLink = $"/authors/{author.Replace(' ', '-').ToLowerInvariant()}";
                    <span class="author"><a href="@authorLink" alt="@author Posts">@author</a></span>
                }
                @("|")
                <span class="published">
                    @Document.GetString("Published")
                    @if (Document.GetString("OriginalPublish") != null)
                    {
                        <span class="original-publish"> Updated Since: @Document.GetString("OriginalPublish")</span>
                    }
                </span>
            }

            @if (Document.Get("Tags") != null)
            {
                <ul class="tags">
                    @foreach (var tag in Document.GetList<string>("Tags"))
                    {
                        <li><a href="@Context.GetLink($"tags/{tag.ToLower().Replace(' ', '-')}")">@tag</a></li>
                    }
                </ul>
            }
        </div>
    </div>
    
    @RenderBody()

    @if(Document.GetBool("AllowComments", true))
    {
    <script src="https://giscus.app/client.js"
            data-repo="e13tech/blog"
            data-repo-id="MDEwOlJlcG9zaXRvcnkyNDMxNDI4NDQ="
            data-category="General"
            data-category-id="DIC_kwDODn4QvM4CirAk"
            data-mapping="pathname"
            data-strict="0"
            data-reactions-enabled="1"
            data-emit-metadata="0"
            data-input-position="top"
            data-theme="light"
            data-lang="en"
            data-loading="lazy"
            crossorigin="anonymous"
            async>
    </script>
    }
</article>
@if(!Document.GetBool("HideAside", false))
{
    <aside>
        <section>
            @{
                // Get the tags of the current post
                var currentTags = Model.GetList<string>("Tags") ?? new List<string>();
                // Get the source or unique identifier of the current post
                var currentPost = Model;
                var postLimit = 4;

                // Retrieve all posts excluding the current post
                var allPosts = Context.Outputs.FromPipeline("Content")
                    .Where(d => d.Source.ToString().Contains("posts"))
                    .Where(d => d != currentPost)
                    .OrderByDescending(doc => doc.Get<DateTime>("Published"));

                // Find posts that share at least one tag with the current post
                var relatedPosts = allPosts
                    .Where(d => d.GetList<string>("Tags").Intersect(currentTags).Any())
                    .Take(postLimit)
                    .ToList();

                string postsHeading = "Related";
                // If no related posts are found, fall back to the 3 most recent posts
                if (!relatedPosts.Any())
                {
                    relatedPosts = allPosts.Take(postLimit).ToList();
                    postsHeading = "Recent";
                }
            }
            <h3>@postsHeading</h3>
            <ul class="side-posts">
                @foreach (var post in relatedPosts)
                {
                    <li>
                        <a href="@Context.GetLink(post)">
                            <img src="@Context.GetLink(post.GetString("Image"))" />
                        </a>
                        <div>
                            <a href="@Context.GetLink(post)">@post.GetString("Title")</a>
                            <span>@post.GetDateTime("Published").ToString("MMMM dd, yyyy")</span>
                        </div>
                        <ul class="tags">
                            @foreach (var tag in post.GetList<string>("Tags"))
                            {
                                <li><a href="@Context.GetLink($"tags/{tag.ToLower().Replace(' ', '-')}")">@tag</a></li>
                            }
                        </ul>
                    </li>
                }
            </ul>
        </section>
        <section>
            <h3><a href="/tags">Top Tags</a></h3>
            <ul class="cloud">
                @foreach (IDocument tag in OutputPages.Get("tags.html").GetChildren().OrderByDescending(x => x.GetChildren().Count()).Take(13))
                {
                var postCount = tag.GetChildren().Count();
                    if (postCount < 1) continue;
                    <li><a href="@Context.GetLink(tag)" data-weight="@postCount"> @tag.GetTitle() (@postCount)</a></li>
                }
            </ul>
        </section>
    </aside>
}


@if(Document.GetBool("AllowSharing", true))
{
<script type='text/javascript' src='https://platform-api.sharethis.com/js/sharethis.js#property=5e55da1246c3ae001282af3a&product=sticky-share-buttons&cms=website' async='async'></script>
}